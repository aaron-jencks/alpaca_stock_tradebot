@startuml "Domain Model Diagram"

object stock {
    + acronym
    + buy_price
    + sell_price
}

class StockDescriptor {
    + shares
}

class StockUpdateDescriptor {
    + day_of_year : int
    + year : int
}

StockDescriptor "1" .. "1" StockUpdateDescriptor : < describes an instance\n in time of

class LimitDescriptor {
    + sell_price
    + buy_price
}

stock "1" .. "1" StockDescriptor : < describes

class TradeController {
    + stocks : StockDescriptor[]
    + buy(s: StockDescriptor)
    + sell(s: StockDescriptor)
}

StockDescriptor "1..*" .. "1" TradeController : < Manages

class PyrhAdapter {
    - rbn: Robinhood
    - login()
    + place_buy()
    + place_sell()
    + get_quote()
}

TradeController "1" .. "1" PyrhAdapter : > Triggers

class DataMonitor {
    + limits : dict<string, LimitDescriptor>
    + stocks : StockDescriptor[]
    + append(stock : StockDescriptor)
    + update_prices()
}

TradeController "1" .. "1" DataMonitor : < Triggers
StockDescriptor "0..*" .. "1" DataMonitor : < Monitors
LimitDescriptor "0..*" .. "1" DataMonitor : < Uses
PyrhAdapter "1" .. "1" DataMonitor : < Interfaces with

class Timer {
    + interval : int
}

class MarketTimer {
    Automatically pauses\noutside of market hours
}

MarketTimer --|> Timer

MarketTimer "1" .. "1" DataMonitor : > Triggers

class StockTransaction {
    + buy : bool
}

StockUpdateDescriptor <|-- StockTransaction

StockDescriptor "1" .. "0..*" StockTransaction : < Describes a\ntransaction of

StockTransaction "0..*" .. "1" TradeController : < Generates

class DataController {
    + tfilename: string
    + pfilename: string
    - export_transaction_data(t: StockTransaction)
    - export_price_data(t: StockUpdateDescriptor)
}

DataController "1" .. "1" TradeController : < Triggers
DataController "1" .. "0..*" StockTransaction : > Documents
DataController "1" .. "0..*" StockUpdateDescriptor : > Documents

@enduml
